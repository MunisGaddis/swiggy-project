pipeline {
    agent any
    tools {
        jdk 'temurin-17'
        nodejs 'node24'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/MunisGaddis/swiggy-project.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''
"$SCANNER_HOME/bin/sonar-scanner" \
  -Dsonar.projectName=Swiggy \
  -Dsonar.projectKey=Swiggy
'''
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: true, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Trivy FS Scan') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage('Docker Build & Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-creds', toolName: 'docker') {
                        sh "docker build -t swiggy ."
                        sh "docker tag swiggy monudocker334/swiggy:latest"
                        sh "docker push monudocker334/swiggy:latest"
                        sh "docker rmi monudocker334/swiggy:latest swiggy || true"
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh "trivy image monudocker334/swiggy:latest > trivy.txt"
            }
        }
        stage('Deploy to Container') {
            steps {
                sh '''
docker rm -f swiggy || true
docker run -d --name swiggy -p 3000:3000 monudocker334/swiggy:latest
'''
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: '**/trivy*.txt', fingerprint: true
        }
    }
}
